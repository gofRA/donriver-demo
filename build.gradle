buildscript {
	ext {
		springBootVersion = '2.0.0.M3'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/"}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.moowork.gradle:gradle-node-plugin:1.2.0")
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: "com.moowork.node"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
	runtime('org.hsqldb:hsqldb:2.4.0')
	compileOnly('org.projectlombok:lombok')
	testCompile('com.jayway.jsonpath:json-path:2.4.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

node {
	version = '7.10.1'
	npmVersion = '4.2.0'
	download = true
	workDir = file("${project.projectDir}/src/main/client/node")
	npmWorkDir = file("${project.buildDir}/src/main/client/npm")
	nodeModulesDir = file("${project.projectDir}/src/main/client/node_modules")
}

task clientBuild {
	dependsOn << npm_install
	dependsOn << npm_run_build
}

task clientStart {
	dependsOn << npm_install
	dependsOn << npm_run_start
}

build.dependsOn clientBuild



